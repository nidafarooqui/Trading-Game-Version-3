package com.project.taikunwithoutchat;



import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.Socket;
import java.net.SocketException;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.Enumeration;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class ProposeScreenActivity extends Activity {
	
	Button startTradeButton;
	TextView rockState, wheatState, woolState;
	Socket socket = null;
	DataOutputStream dataOutputStream = null;
	DataInputStream dataInputStream = null;
	String ipAddress = " ";
	String port= "8080";
	String response;
	String wool= "3";
	String rock= "3";
	String wheat="3";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_propose_screen);
		
		startTradeButton = (Button) findViewById(R.id.buttonStartTrade);
		rockState = (TextView) findViewById(R.id.rocksGoalState);
		wheatState = (TextView) findViewById(R.id.wheatGoalState);
		woolState = (TextView) findViewById(R.id.woolGoalState);
		
		//get values of the rock, wheat and wool state to update the text view 
		//and the chat message and trade actions to write to the file
		Intent intent2 = getIntent();
		wool = intent2.getStringExtra("Wool");
		rock = intent2.getStringExtra("Ore");
		wheat = intent2.getStringExtra("Wheat");
		String chatMessage= intent2.getStringExtra("Chat");
		String tradeActions= intent2.getStringExtra("Trade Actions");
		int roundNumber = intent2.getIntExtra("Round Number", 0);
		String roundNum = Integer.toString(roundNumber);
				
		if(rock!= null)
		{
			rockState.setText(rock);
		}
		else
		{
			rockState.setText("3");
		}
		if(wool!= null)
		{
			woolState.setText(wool);
		}
		else
		{
			woolState.setText("3");
		}
		if(wheat!= null)
		{
			wheatState.setText(wheat);
		}
		else
		{
			wheatState.setText("3");
		}
		
		startTradeButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(ProposeScreenActivity.this, ClientActivity.class);
				intent.putExtra("rock", rock);
				intent.putExtra("wheat", wheat);
				intent.putExtra("wool", wool);
				startActivity(intent);
			}
		});
		ipAddress=getIpAddress();
		if((rockState.getText().toString().equals("4") && woolState.getText().toString().equals("5")) || 
				(rockState.getText().toString().equals("4") && wheatState.getText().toString().equals("5")))
				{
					String tMsg="4";
					MyClientTask myClientTask = new MyClientTask(ipAddress, Integer.parseInt(port),tMsg);
					myClientTask.execute();
				}
			
	}
	public class MyClientTask extends AsyncTask<Void, Void, Void> {

		String dstAddress;
		int dstPort;
		String msgToServer;
		

		MyClientTask(String addr, int port, String msgTo) {
			dstAddress = addr;
			dstPort = port;
			msgToServer = msgTo;
		}

		@Override
		protected Void doInBackground(Void... arg0) {

			

			try {
				socket = new Socket(dstAddress, dstPort);
				dataOutputStream = new DataOutputStream(
						socket.getOutputStream());
				dataInputStream = new DataInputStream(socket.getInputStream());
				if((rockState.getText().toString().equals("4") && woolState.getText().toString().equals("5")) || 
						(rockState.getText().toString().equals("4") && wheatState.getText().toString().equals("5")))
						{
							Intent i=new Intent(ProposeScreenActivity.this,GameWonActivity.class);
				
							if(msgToServer != null){
								dataOutputStream.writeUTF(msgToServer);
								startActivity(i);
							}
						}
				
				response =dataInputStream.readUTF();
				if(response.equals("4"))
				{
					Intent ii=new Intent(ProposeScreenActivity.this,GameLostActivity.class);
					startActivity(ii);
				}

			} catch (UnknownHostException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				response = "UnknownHostException: " + e.toString();
				//Toast.makeText(ClientActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				response = "IOException: " + e.toString();
				//Toast.makeText(ClientActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
			} 
			return null;
		}

		
		@Override
		protected void onPostExecute(Void result) {
			//write here
			super.onPostExecute(result);
		}
		
		
	}
	public void closeSockets()
	{
		
		if (socket != null) {
			try {
				socket.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				//Toast.makeText(ClientActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
			}
		}

		if (dataInputStream != null) {
			try {
				dataInputStream.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				//Toast.makeText(ClientActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
			}
		}

		if (dataOutputStream != null) {
			try {
				dataOutputStream.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				//Toast.makeText(ClientActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
			}
		}
			
	}
	protected void onDestroy()
	{
		super.onDestroy();
		closeSockets();
		
	}
	
	private String getIpAddress() {
		String ip = "";
		try {
			Enumeration<NetworkInterface> enumNetworkInterfaces = NetworkInterface
					.getNetworkInterfaces();
			while (enumNetworkInterfaces.hasMoreElements()) {
				NetworkInterface networkInterface = enumNetworkInterfaces
						.nextElement();
				Enumeration<InetAddress> enumInetAddress = networkInterface
						.getInetAddresses();
				while (enumInetAddress.hasMoreElements()) {
					InetAddress inetAddress = enumInetAddress.nextElement();

					if (inetAddress.isSiteLocalAddress()) {
						ip =inetAddress.getHostAddress();
					}

				}

			}

		} catch (SocketException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			ip += "Something Wrong! " + e.toString() + "\n";
			//Toast.makeText(ServerActivity.this, "An exception occurred: " + e.toString(), Toast.LENGTH_SHORT).show();
		}

		return ip;
	}
	
}